plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}

	maven {
		url = "https://jitpack.io"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "maven.modrinth:sodium:${project.sodium_version}"

	implementation 'org.joml:joml:1.10.2'

	//modImplementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.github.FlashyReese:reeses-sodium-options:${project.reeses_sodium_options}"

	//modImplementation "com.github.oshi:oshi-core:${project.oshi_version}"
	modCompileOnly group: 'com.github.oshi', name: 'oshi-core', version: '6.6.5'
	modCompileOnly group:'org.slf4j',name: 'slf4j-api', version: '1.7.30'
	modCompileOnly group:'net.java.dev.jna', name: 'jna', version: '5.15.0'
	modCompileOnly group:'net.java.dev.jna', name: 'jna-platform', version: '5.15.0'
	include group: 'com.github.oshi', name: 'oshi-core', version: '6.6.5'
	include group:'org.slf4j',name: 'slf4j-api', version: '1.7.30'
	include group:'net.java.dev.jna', name: 'jna', version: '5.15.0'
	include group:'net.java.dev.jna', name: 'jna-platform', version: '5.15.0'

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from "LICENSE.txt"
}



// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}